//This bookmarklet checks local storage, session storage, and cookies for reflections. It also allows you to set new storage entries or modify existing ones.
//Just copy the code below and save it as a bookmarked url then pop it on your bookmark bar. 

javascript:(function() {  var view = document.createElement('div');  view.style = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: #f0f0f0; overflow: auto; z-index: 9999; padding: 20px; font-family: Arial, sans-serif; box-sizing: border-box; display: flex;';  var closeButton = document.createElement('button');  closeButton.innerText = 'Close';  closeButton.style = 'position: absolute; top: 10px; right: 10px; font-size: 16px; background-color: #ff4b5c; color: white; border: none; padding: 5px 10px; cursor: pointer;';  closeButton.onclick = function() { document.body.removeChild(view); };  var leftPane = document.createElement('div');  leftPane.style = 'width: 50%; overflow-y: auto; padding-right: 10px; border-right: 1px solid #ccc;';  view.appendChild(leftPane);  var rightPane = document.createElement('div');  rightPane.style = 'width: 50%; overflow-y: auto; padding-left: 10px;';  view.appendChild(rightPane);  var localPane = document.createElement('div');  localPane.style = 'height: 50%; overflow-y: auto;';  leftPane.appendChild(localPane);  var sessionPane = document.createElement('div');  sessionPane.style = 'height: 50%; overflow-y: auto;';  leftPane.appendChild(sessionPane);  var localTitle = document.createElement('h3');  localTitle.innerText = 'Local Storage Key Value Pairs';  localPane.appendChild(localTitle);  var sessionTitle = document.createElement('h3');  sessionTitle.innerText = 'Session Storage Key Value Pairs';  sessionPane.appendChild(sessionTitle);  var rightPaneTitle = document.createElement('h3');  rightPaneTitle.innerText = 'Inspector';  rightPane.appendChild(rightPaneTitle);  function createItem(storageType, pane, key, value) {    var itemWrapper = document.createElement('div');    itemWrapper.style = 'border: 1px solid #ccc; padding: 10px; margin: 10px 0; overflow-wrap: break-word;';    var keyValueWrapper = document.createElement('div');    keyValueWrapper.style = 'display: flex; align-items: center; margin-bottom: 5px;';    itemWrapper.appendChild(keyValueWrapper);    var keyInput = document.createElement('input');    keyInput.value = key;    keyInput.style = 'flex: 1; margin-right: 10px;';    keyValueWrapper.appendChild(keyInput);    var valueInput = document.createElement('input');    valueInput.value = value;    valueInput.style = 'flex: 2; margin-right: 10px;';    keyValueWrapper.appendChild(valueInput);    var viewButton = document.createElement('button');    viewButton.innerText = 'View';    viewButton.onclick = function() {      var newValueInput = document.createElement(valueInput.tagName === 'INPUT' ? 'textarea' : 'input');      newValueInput.value = valueInput.value;      newValueInput.style = 'flex: 2; margin-right: 10px;';      keyValueWrapper.replaceChild(newValueInput, valueInput);      valueInput = newValueInput;    };    keyValueWrapper.appendChild(viewButton);    var buttonWrapper = document.createElement('div');    itemWrapper.appendChild(buttonWrapper);    var updateButton = document.createElement('button');    updateButton.innerText = 'Update';    updateButton.onclick = function() {      storageType.setItem(keyInput.value, valueInput.value);      loadItems();    };    buttonWrapper.appendChild(updateButton);    var deleteButton = document.createElement('button');    deleteButton.innerText = 'Delete';    deleteButton.onclick = function() {      storageType.removeItem(keyInput.value);      loadItems();    };    buttonWrapper.appendChild(deleteButton);    addChecks(itemWrapper, key, value);    pane.appendChild(itemWrapper);  }  function addChecks(wrapper, key, value) {    function addLabel(text) {      var label = document.createElement('span');      label.innerText = text;      label.style = 'margin-left: 10px; background-color: #f44336; color: white; padding: 2px 5px; font-size: 12px; border-radius: 3px; white-space: normal; display: inline-block; max-width: 90%;';      wrapper.appendChild(label);    }    if(document.documentElement.outerHTML.includes(value)) { addLabel('Reflected in Page'); }    if(window.location.href.includes(value)) { addLabel('Reflected in URL'); }    if(document.cookie.includes(value)) { addLabel('Reflected in Cookie'); }    if(Array.from(document.scripts).some(script => script.textContent.includes(value))) { addLabel('Reflected in Script'); }    var sensitiveKeys = ["password", "token", "secret", "apikey", "auth", "credentials"];    if(sensitiveKeys.some(sensitive => key.toLowerCase().includes(sensitive))) { addLabel('Potential Sensitive Information'); }  }  function loadItems() {    localPane.innerHTML = '';    sessionPane.innerHTML = '';    localPane.appendChild(closeButton);    localPane.appendChild(localTitle);    sessionPane.appendChild(sessionTitle);    for (var i = 0; i < localStorage.length; i++) {      var key = localStorage.key(i);      var value = localStorage.getItem(key);      createItem(localStorage, localPane, key, value);    }    var addLocalButton = document.createElement('button');    addLocalButton.innerText = 'Add New Local Storage Item';    addLocalButton.onclick = function() {      createItem(localStorage, localPane, '', '');    };    localPane.appendChild(addLocalButton);    for (var i = 0; i < sessionStorage.length; i++) {      var key = sessionStorage.key(i);      var value = sessionStorage.getItem(key);      createItem(sessionStorage, sessionPane, key, value);    }    var addSessionButton = document.createElement('button');    addSessionButton.innerText = 'Add New Session Storage Item';    addSessionButton.onclick = function() {      createItem(sessionStorage, sessionPane, '', '');    };    sessionPane.appendChild(addSessionButton);  }  function inspectLocalStorageUsage() {    rightPane.innerHTML = '';    rightPane.appendChild(rightPaneTitle);    var patterns = [/localStorage\.setItem/g, /localStorage\.getItem/g, /localStorage\.removeItem/g, /localStorage\.clear/g, /sessionStorage\.setItem/g, /sessionStorage\.getItem/g, /sessionStorage\.removeItem/g, /sessionStorage\.clear/g, /in localStorage/g, /in sessionStorage/g];    Array.from(document.scripts).forEach(script => {      patterns.forEach(pattern => {        var match;        var content = script.textContent;        var lines = content.split('\n');        while ((match = pattern.exec(content)) !== null) {          var lineNumber = content.substring(0, match.index).split('\n').length;          var lineContent = lines[lineNumber - 1].trim();          var item = document.createElement('div');          item.style = 'border: 1px solid #ccc; padding: 10px; margin: 10px 0; overflow-wrap: break-word;';          item.innerHTML = %60<strong>Pattern:</strong> ${pattern.source}<br><strong>Line:</strong> ${lineNumber}<br><strong>Content:</strong> ${lineContent}%60;          rightPane.appendChild(item);        }      });    });  }  document.body.appendChild(view);  loadItems();  inspectLocalStorageUsage();})();
