//Extracts the dominant colors on a webpage into a palette and displays the color codes
javascript:(function() {    function getPalette(size) {        var colors = {};        [].forEach.call(document.querySelectorAll('*'), function(node) {            var color = window.getComputedStyle(node).backgroundColor;            colors[color] = (colors[color] || 0) + 1;        });        var sortedColors = Object.keys(colors).filter(function(color) {            return !color.startsWith('rgba(0, 0, 0') && !color.startsWith('rgb(255, 255, 255');        }).sort(function(a, b) { return colors[b] - colors[a]; });        return sortedColors.slice(0, size);    }    function getImages(minSize) {        return [].map.call(document.querySelectorAll('img'), function(img) {            if (img.width > minSize && img.height > minSize) {                return {src: img.src, width: img.width, height: img.height};            }            return null;        }).filter(Boolean);    }    function rgbToHex(color) {        var rgb = color.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);        return '#' + parseInt(rgb[1], 10).toString(16).padStart(2, '0') + parseInt(rgb[2], 10).toString(16).padStart(2, '0') + parseInt(rgb[3], 10).toString(16).padStart(2, '0');    }    var paletteDiv = document.createElement('div');    paletteDiv.style.cssText = 'position: fixed; top: 10%; left: 10%; width: 300px; height: 400px; background-color: #f0f0f0; border: 2px solid #000; border-radius: 10px; padding: 15px; z-index: 10000000; box-shadow: 0 0 10px rgba(0,0,0,0.5); overflow: auto; resize: both;';    document.body.appendChild(paletteDiv);    var closeButton = document.createElement('button');    closeButton.innerHTML = 'Close';    closeButton.onclick = function() { document.body.removeChild(paletteDiv); };    paletteDiv.appendChild(closeButton);    var paletteSizeSelect = document.createElement('select');    for (var i = 1; i <= 7; i++) {        var option = document.createElement('option');        option.value = i;        option.text = i;        paletteSizeSelect.appendChild(option);    }    paletteDiv.appendChild(paletteSizeSelect);    var goButton = document.createElement('button');    goButton.innerHTML = 'Create Palette';    goButton.onclick = function() {        var size = parseInt(paletteSizeSelect.value, 10);        var colorsContainer = document.getElementById('colorsContainer');        colorsContainer.innerHTML = '';        var colors = getPalette(size);        var codeText = document.getElementById('codeText');        colors.forEach(function(color) {            var colorDiv = document.createElement('div');            colorDiv.style.backgroundColor = color;            colorsContainer.appendChild(colorDiv);            var showButton = document.createElement('button');            showButton.innerHTML = 'Show Codes';            showButton.onclick = function() {                codeText.value = 'RGB: ' + color + '\nHEX: ' + rgbToHex(color);            };            colorDiv.appendChild(showButton);        });    };    paletteDiv.appendChild(goButton);    var colorsContainer = document.createElement('div');    colorsContainer.id = 'colorsContainer';    paletteDiv.appendChild(colorsContainer);    var codeText = document.createElement('textarea');    codeText.id = 'codeText';    codeText.readOnly = true;    paletteDiv.appendChild(codeText);    var ripButton = document.createElement('button');    ripButton.innerHTML = 'Rip Images';    ripButton.onclick = function() {        var ripView = document.createElement('div');        ripView.style.cssText = paletteDiv.style.cssText;        document.body.appendChild(ripView);        var closeRipButton = document.createElement('button');        closeRipButton.innerHTML = 'Close';        closeRipButton.onclick = function() { document.body.removeChild(ripView); };        ripView.appendChild(closeRipButton);        var minSizeSelect = document.createElement('select');        for (var size = 10; size <= 250; size += 10) {            var option = document.createElement('option');            option.value = size;            option.text = size;            minSizeSelect.appendChild(option);        }        ripView.appendChild(minSizeSelect);        var ripGoButton = document.createElement('button');        ripGoButton.innerHTML = 'Go';        ripGoButton.onclick = function() {            var minSize = parseInt(minSizeSelect.value, 10);            var images = getImages(minSize);            var imgDiv = document.createElement('div');            images.forEach(function(img) {                var thumb = document.createElement('img');                thumb.src = img.src;                thumb.width = 20;                thumb.height = 20;                imgDiv.appendChild(thumb);                var link = document.createElement('a');                link.href = img.src;                link.innerHTML = 'Image ' + img.width + 'x' + img.height;                link.style.display = 'block';                imgDiv.appendChild(link);            });            ripView.innerHTML = '';            ripView.appendChild(closeRipButton);            ripView.appendChild(imgDiv);        };        ripView.appendChild(ripGoButton);    };    paletteDiv.appendChild(ripButton);})();
